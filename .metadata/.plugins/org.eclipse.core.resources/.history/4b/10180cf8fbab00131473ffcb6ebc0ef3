

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * Servlet implementation class callback
 */
@WebServlet("/callback")
public class callback extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public callback() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String code = request.getParameter("code");
		response.getWriter().println("Your code is " + code + "<br />");
		
		if (code != "" && code != null)
		{		
			BufferedReader br;
			try 
			{
				br = getAuthToken(code);
				String reply = null;
				reply = br.readLine();
				
				JsonFactory factory = new JsonFactory(); 
			    ObjectMapper mapper = new ObjectMapper(factory);  
			    TypeReference<HashMap<String,Object>> typeRef 
			          = new TypeReference< 
			                 HashMap<String,Object> 
			               >() {}; 
			    HashMap<String,Object> o 
			         = mapper.readValue(reply.getBytes(), typeRef); 
			    System.out.println("Got " + o); 
				
				
				response.getWriter().println(reply + "<br />");
			} 
			catch (Exception e) 
			{
				e.printStackTrace();
			}			
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}
	
	private BufferedReader getAuthToken(String pCode) throws Exception
	{
		URL tokenReq = new URL("https://api.twitch.tv/kraken/oauth2/token");
		String params = "client_id=jnu1pncqiy1terszj189ejzjomd911r" +
						"&client_secret=amgjqsl072wc33trwujysixxs3aqlua" +
						"&grant_type=authorization_code" +
						"&redirect_uri=http://localhost:8080/streamAlert/callback" +
						"&code=" + pCode;
	
		HttpURLConnection cnx = (HttpURLConnection) tokenReq.openConnection();
		cnx.setDoOutput(true);
		cnx.setRequestMethod("POST");
		cnx.setRequestProperty("Content-Type", "application/x-www-form-urlencoded"); 
		cnx.setRequestProperty("charset", "utf-8");
		cnx.setRequestProperty("Content-Length", "" + Integer.toString(params.getBytes().length));
		cnx.setUseCaches(false);
	
		DataOutputStream os = new DataOutputStream(cnx.getOutputStream());
		os.writeBytes(params);
		os.flush();
		os.close();
		
/*		Map<String, List<String>> map = cnx.getRequestProperties();
		
		for(String key : map.keySet())
		{
			System.out.println("\n" + key);
			for(String value : map.get(key))
			{
				System.out.println(value);
			}
		}*/
		
		return new BufferedReader(new InputStreamReader(cnx.getInputStream()));
	}
}
